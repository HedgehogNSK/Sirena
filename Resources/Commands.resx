<?xml version="1.0" encoding="utf-8"?>
<root>
  <data name="command.call.ask_sirena_id">
    <value>‚å®Ô∏è *Please provide Sirena&apos;s ID to activate.*
 It must be Sirena that you own or you are responsible for</value>
  </data>
  <data name="command.call.no_available">
    <value>‚ö†Ô∏è Your Sirenas are not being listened to yet</value>
  </data>
  <data name="command.call.available.description">
    <value>Choose *Sirena* to call</value>
  </data>
  <data name="command.call.description">
    <value>Call Sirena by number or by ID</value>
  </data>
  <data name="command.call.error.value_not_id">
    <value>‚ö†Ô∏è *Value is incorrect!*
</value>
  </data>
  <data name="command.call.explanation_rights">
    <value>You can call Sirenas that were created by you or those Sirenas, that the owner gave you the rights to call</value>
  </data>
  <data name="command.call.extra_info">
    <value>‚ÑπÔ∏è You can send extra information for subscribers or just click the *{0}* button.</value>
  </data>
  <data name="command.call.extra_info.skip">
    <value>üîä Launch only</value>
  </data>
  <data name="command.call.last_call">
    <value>Last call was made recently by {0} at {1} UTC. Please wait {2} until next try.</value>
  </data>
  <data name="command.call.last_call.2">
    <value>*{0}*
 _Activated by_ {1}.</value>
  </data>
  <data name="command.call.not_allowed">
    <value>‚ö†Ô∏è Unsuccesful attempt to activate *Sirena*: {0}
</value>
  </data>
  <data name="command.call.other">
    <value>[other person](tg://user?id={0})</value>
  </data>
  <data name="command.call.success">
    <value>{0} subscribers were notified</value>
  </data>
  <data name="command.call.user">
    <value>*you*</value>
  </data>
  <data name="command.create_sirena.error.limit_reached">
    <value>‚ö†Ô∏è *You&apos;ve reached the limit!* You can&apos;t create new Sirenas anymore.
Please remove one of your Sirenas and try again.</value>
  </data>
  <data name="command.create_sirena.error.no_title">
    <value>Please insert title of the Sirena. Title must be between {0} and {1} symbols long.

 _Alternatively you can create Sirena via command syntax:_
`/create title_of_sirena`</value>
  </data>
  <data name="command.create_sirena.error.no_user">
    <value>We can&apos;t find user with ID: {0}</value>
  </data>
  <data name="command.create_sirena.error.unknown">
    <value>‚ö†Ô∏è Unknown error. Sirena wasn&apos;t created.</value>
  </data>
  <data name="command.create_sirena.success">
    <value>*Sirena has been created successfuly.*
It&apos;s identificator (ID): `{0}`
Invite link:
</value>
  </data>
  <data name="command.create.description">
    <value>Creates a Sirena</value>
  </data>
  <data name="command.delegate.description">
    <value>Delegate rights to activate Sirena to another user</value>
  </data>
  <data name="command.delegate.error.incorrect_id">
    <value>‚ö†Ô∏è {0} parameter is incorrect. First parameter has to be serial number or ID of your Sirena</value>
  </data>
  <data name="command.delegate.error.incorrect_paramters">
    <value>Please input: `/delegate {siren number or id} {user id}`</value>
  </data>
  <data name="command.delegate.error.incorrect_user_id">
    <value>‚ö†Ô∏è {0} parameter is incorrect. Second parameter must be *UID* of user that will get rights to activate the Sirena.</value>
  </data>
  <data name="command.delegate.error.no_sirena">
    <value>You don&apos;t have a Sirena with ID: `{0}`</value>
  </data>
  <data name="command.delegate.success">
    <value>User {0} has been set as a responsible for Sirena: `{1}`</value>
  </data>
  <data name="command.delete.ask_sirena_id">
    <value>To delete a Sirena, please insert *Sirena&apos;s ID or serial number* that is owned by you.</value>
  </data>
  <data name="command.delete.bref_info">
    <value>. \[`{1}`] *{0}*
</value>
  </data>
  <data name="command.delete.cancel">
    <value>‚õîÔ∏è No</value>
  </data>
  <data name="command.delete.confirm">
    <value>‚úÖ Yes</value>
  </data>
  <data name="command.delete.description">
    <value>Delete your Sirena by ID or by Serial number</value>
  </data>
  <data name="command.delete.header">
    <value>Select Sirena you want to *DELETE*:
</value>
  </data>
  <data name="command.delete.no_sirenas">
    <value>‚ö†Ô∏è You haven&apos;t created any Sirena yet.</value>
  </data>
  <data name="command.delete.notification">
    <value>You are going to delete Sirena: *{0}*
 ID: `{1}`
*Are your sure?* This action can&apos;t be canceled.</value>
  </data>
  <data name="command.delete.success">
    <value>üóëÔ∏è‚úÖ Sirena *&quot;{0}&quot;* has been deleted</value>
  </data>
  <data name="command.display_sirenas.no_created">
    <value>‚ö†Ô∏è You haven&apos;t created any Sirena yet.</value>
  </data>
  <data name="command.display_sirenas.subscribers">
    <value>   _Subscribers[{0}]_
</value>
  </data>
  <data name="command.display_sirenas.title">
    <value>The list of your sirens:
</value>
  </data>
  <data name="command.find.description">
    <value>Find Sirena by key string</value>
  </data>
  <data name="command.find.header">
    <value>Found sirenas:
</value>
  </data>
  <data name="command.find.input_phrase">
    <value>‚å®Ô∏è *Please input search phrase*.
Search phrase has to be at least {0} symbols length but less than {1} symbols.</value>
  </data>
  <data name="command.find.no_id">
    <value>‚ö†Ô∏è There is no Sirena with this ID: `{0}`.
Please check input ID.</value>
  </data>
  <data name="command.find.no_title">
    <value>‚ö†Ô∏è There is no Sirena with title that contains: \&quot;{0}\&quot;.
Please try another key phrase.</value>
  </data>
  <data name="command.requests.header">
    <value>Reuqests list
</value>
  </data>
  <data name="command.requests.no_requests">
    <value>There are no requests for delegation of rights</value>
  </data>
  <data name="command.requests.request_template">
    <value>. *{0}|{1}* is asking right to call Sirena:
{2}
</value>
  </data>
  <data name="command.get_responsibles.incorrect_parameters">
    <value>Please use next syntax to get list of responsible users:
`/responsible {sirena id or number}`</value>
  </data>
  <data name="command.get_responsibles.no_sirena">
    <value>‚ö†Ô∏è Sirena wasn&apos;t found</value>
  </data>
  <data name="command.get_responsibles.no_sirena_id">
    <value>‚ö†Ô∏è There is no Sirena with ID *{0}*</value>
  </data>
  <data name="command.get_responsibles.no_sirena_number">
    <value>‚ö†Ô∏è You don&apos;t have Sirena with number *{0}*</value>
  </data>
  <data name="command.get_responsibles.template">
    <value>Sirena *\&quot;{0}\&quot;* supervisors:
{1} - Owner
</value>
  </data>
  <data name="command.help.header">
    <value>*List of commands*
</value>
  </data>
  <data name="command.info.description">
    <value>Display Sirena detailed information and available commands for itself</value>
  </data>
  <data name="command.list.description">
    <value>Sirenas, created by you</value>
  </data>
  <data name="command.menu.description">
    <value>Displays primary bot functions</value>
  </data>
  <data name="command.menu.title">
    <value>üïπ Main menu üïπ</value>
  </data>
  <data name="command.mute_user.impossbile_mute">
    <value>‚ö†Ô∏è *You can&apos;t mute this user for the Sirena.*
 Possible causes: you aren&apos;t subscibed to this Sirena, target user isn&apos;t responsible for call of this Sirena.</value>
  </data>
  <data name="command.mute_user.incorrect_id">
    <value>‚ö†Ô∏è {0} parameter is incorrect. Second parameter has to be serial number or ID of your Sirena</value>
  </data>
  <data name="command.mute_user.incorrect_parameters">
    <value>To mute an user please input: `/mute {user id to mute} {sirena id}`</value>
  </data>
  <data name="command.mute_user.incorrect_uid">
    <value>‚ö†Ô∏è {0} parameter is incorrect. First parameter has to be *UID* of user that is already responsible for Sirena. And you won&apos;t to revoke they rights.</value>
  </data>
  <data name="command.mute_user.no_sirena">
    <value>‚ö†Ô∏è Couldn&apos;t find Sirena to mute user</value>
  </data>
  <data name="command.mute_user.success">
    <value>‚úÖüîá *User {0} (ID:{1}) has been muted.*
Calls from *Sirena*: {2} by this user will be ignored.
If you&apos;re subscribed to any other *Sirena* this user can trigger, you&apos;ll still receive notifications from them.

_To unmute the user, use the command_ `/unmute`</value>
  </data>
  <data name="command.mute.description">
    <value>Mute calls from certain user for certain Sirena. Calls of the Sirena from other users will be active anyway</value>
  </data>
  <data name="command.request_rights.already_sent">
    <value>‚ö†Ô∏è You have *already sent* a permission request for the Sirena.</value>
  </data>
  <data name="command.request_rights.available.empty">
    <value>‚ö†Ô∏è You don&apos;t have any Sirena for which you could request call rights.</value>
  </data>
  <data name="command.request_rights.available.header">
    <value>*Your are able to request rights to call:*
</value>
  </data>
  <data name="command.request_rights.extra_info">
    <value>‚ÑπÔ∏è You are about to ask rights to call Sirena: {0}.
You can write extra infromation for the owner of the Sirena or you can send request as is by click on the button down bellow.</value>
  </data>
  <data name="command.request_rights.extra_info.skip">
    <value>üôè Request only</value>
  </data>
  <data name="command.request_rights.fail">
    <value>‚ö†Ô∏è Request failed. Possible reasons: 
1. There is no *Sirena* with ID: `{0}`
2. You are the *owner* of the Sirena
3. You are *already responsible* for the Sirena.</value>
  </data>
  <data name="command.request_rights.incorrect_parameters">
    <value>‚ö†Ô∏è Incorrect parameters. Please use syntax:
 /request {sirena id} [request message]
You can send request message or skip it. But you have to set correct Sirena ID</value>
  </data>
  <data name="command.request_rights.success">
    <value>‚úÖ Request to activate *Sirena* successfully submitted:
{0}

_If the Sirena‚Äôs owner approves your request, you‚Äôll be granted access to activate this_ *Sirena*.</value>
  </data>
  <data name="command.request.description">
    <value>Request the owner of Sirena to delegate to you the right to call it.</value>
  </data>
  <data name="command.requests.description">
    <value>Display a list of requests for permission to launch a Sirena</value>
  </data>
  <data name="command.responsible.description">
    <value>Display list of user allowed to call Sirena</value>
  </data>
  <data name="command.revoke_rights.fail">
    <value>‚ö†Ô∏è You couldn&apos;t revoke rights from the user. Possible reasons: user doesn&apos;t have rights or you don&apos;t own this Sirena: {0}</value>
  </data>
  <data name="command.revoke_rights.incorrect_parameters">
    <value>‚ö†Ô∏è Incorrect parameters. Please use syntax:
 /request {sirena ID} [request message]
You can send request message or skip it. But you have to set correct Sirena ID</value>
  </data>
  <data name="command.revoke_rights.incorrect_sirena_param">
    <value>‚ö†Ô∏è {0} parameter is incorrect. First parameter must be serial number or ID of your Sirena</value>
  </data>
  <data name="command.revoke_rights.incorrect_uid">
    <value>‚ö†Ô∏è {0} parameter is incorrect. Second parameter must be *UID* of user that is already responsible for the Sirena.</value>
  </data>
  <data name="command.revoke_rights.success">
    <value>The user: {0} has been deprived of his rights to call the Sirena:
 {1}</value>
  </data>
  <data name="command.revoke.description">
    <value>Take back rigths to call Sirena of another user</value>
  </data>
  <data name="command.sirena_info.general_info">
    <value>Title: *{0}*
ID: `{1}`
Subscribers: {2}
</value>
  </data>
  <data name="command.sirena_info.general_info.not_owner">
    <value>Title: *{0}*
ID: `{1}`
Owner: {3}
Subscribers: {2}
</value>
  </data>
  <data name="command.sirena_info.last_call">
    <value>Last call: {0}
</value>
  </data>
  <data name="command.start.welcome">
    <value>*Welcome!*

_Sirena BOT_ offers a convenient mechanism for instant notifications. The primary goal of the bot is to create a notification system where the focus is on the event, not the message author.

You can create notifications (_Sirens_) and invite people to subscribe to alerts for meetings, gatherings, or any other events. Whether it‚Äôs a work meeting, a parent-teacher conference, a meetup with friends, or a clan raid, you can easily notify all subscribers about the time and place of the event.

Use the Menu (/menu) to manage the bot or directly call commands. To see a list of available commands, type /help.

This bot is especially useful in work chats, parent groups, or community chats, where it&apos;s important to avoid unnecessary discussions while still staying informed about urgent messages.</value>
  </data>
  <data name="command.subscribe.askSirenaId">
    <value>‚å®Ô∏è *Please input Sirena ID.*
You have to input exact ID of Sirena that you are going to subscribe to.

You can use *Find* command to find a Sirena by title.</value>
  </data>
  <data name="command.subscribe.description">
    <value>Subscribes to Sirena by ID</value>
  </data>
  <data name="command.subscribe.not_exists">
    <value>‚ö†Ô∏è *Attempt to subscribe is failed.*
Possible reasons:
1. There is no Sirena with such ID;
2. You are the owner of the Sirena.

Try another *Sirena ID*</value>
  </data>
  <data name="command.subscribe.success">
    <value>üîî You have successfully subscribed to:
{0}</value>
  </data>
  <data name="command.subscriptions.bref_info">
    <value>. *{0}* by {1}
ID: `{2}`

</value>
  </data>
  <data name="command.subscriptions.description">
    <value>Displays you current subscriptions</value>
  </data>
  <data name="command.subscriptions.header">
    <value>*Your subscriptions:*

</value>
  </data>
  <data name="command.subscriptions.noSubscriptions">
    <value>You don&apos;t have any subscription yet.</value>
  </data>
  <data name="command.unmute.description">
    <value>Unmute previously muted user for certain Sirena</value>
  </data>
  <data name="command.unmute.error.not_found">
    <value>‚ö†Ô∏è Couldn&apos;t find Sirena to mute user</value>
  </data>
  <data name="command.unmute.error.wrong_parameter">
    <value>To unmute user please input command with parameters: /unmute {user id to mute} {sirena id}</value>
  </data>
  <data name="command.unmute.error.wrong_sirena_id">
    <value>‚ö†Ô∏è {0} parameter is incorrect. Second parameter has to be serial number or *ID* of your Sirena</value>
  </data>
  <data name="command.unmute.error.wrong_uid">
    <value>‚ö†Ô∏è {0} parameter is incorrect. First parameter has to be *UID* of user that is already responsible for Sirena.</value>
  </data>
  <data name="command.unmute.success">
    <value>‚úÖüîä *User {0} (ID:{1}) has been unmuted.*
You will be notified if this user will call the Sirena: {2}</value>
  </data>
  <data name="command.unsubscribe.description">
    <value>Unsubscribes from certain Sirena</value>
  </data>
  <data name="command.unsubscribe.fail">
    <value>‚ö†Ô∏è *Unsubscription failed.* Possible reasons:
1 You&apos;re not a listener of the Sirena
2. The Sirena doens&apos;t exist.</value>
  </data>
  <data name="command.unsubscribe.success">
    <value>üîï You have successfully unsubsribed from the Sirena `{0}`</value>
  </data>
  <data name="menu.buttons.anotherTry.title">
    <value>üîÑ Retry</value>
  </data>
  <data name="menu.buttons.call.title">
    <value>üîä Launch Sirena</value>
  </data>
  <data name="menu.buttons.create.title">
    <value>üÜï Create</value>
  </data>
  <data name="menu.buttons.delete.title">
    <value>üóë Delete</value>
  </data>
  <data name="menu.buttons.display_sirenas.title">
    <value>üñ• My Sirenas</value>
  </data>
  <data name="menu.buttons.find.title">
    <value>üîé Find</value>
  </data>
  <data name="menu.buttons.get_info.title">
    <value>‚ÑπÔ∏è Info</value>
  </data>
  <data name="menu.buttons.requests.title">
    <value>üëΩ Requests [{0}]</value>
  </data>
  <data name="menu.buttons.get_responsibles.title">
    <value>ü´° Responsibles [{0}]</value>
  </data>
  <data name="menu.buttons.menu.title">
    <value>üßæ Menu</value>
  </data>
  <data name="menu.buttons.mute_user.title">
    <value>üîá Mute sender</value>
  </data>
  <data name="menu.buttons.unmute_user.title">
    <value>üîä Unmute sender</value>
  </data>
  <data name="menu.buttons.request_rights.title">
    <value>üôè Request rights</value>
  </data>
  <data name="menu.buttons.subscribe.title">
    <value>üîî Subscribe</value>
  </data>
  <data name="menu.buttons.subscriptions.title">
    <value>üëÄ Subscriptions</value>
  </data>
  <data name="menu.buttons.unsubscribe.title">
    <value>üîï UnSubscribe</value>
  </data>
  <data name="miscellaneous.no_command">
    <value>‚ö†Ô∏è No known command were found! Use /help or /menu to find out what I can do.</value>
  </data>
  <data name="miscellaneous.user_ghost">
    <value>Ghost</value>
  </data>
  <data name="command.start.create-user.fail">
    <value>‚ö†Ô∏è An error occurred while creating a new user. Please try again later.</value>
  </data>
  <data name="command.requests.error.no_pending_requests">
    <value>‚ö†Ô∏è There are currently no requests for the right to activate any of your Sirenas.</value>
  </data>
  <data name="command.requests.list_title">
    <value>üßæ The list of your Sirenas for which someone has requested the right to call:</value>
  </data>
  <data name="command.requests.display_by_id">
    <value>‚ÑπÔ∏è *{3}Request for Sirena activation rights.*
Sirena:   \[`{1}`] {2}
Requestor:  {0}</value>
  </data>
  <data name="command.requests.accept">
    <value>‚úÖ Approve</value>
  </data>
  <data name="menu.buttons.decline.title">
    <value>‚õîÔ∏è Decline</value>
  </data>
  <data name="command.requests.display_by_id.user_message">
    <value>_Comment:_  </value>
  </data>
  <data name="command.requests.error.sirena_has_no_requests">
    <value>‚ö†Ô∏è No *Sirena* activation requests are available.
 *Sirena*: {0}</value>
  </data>
  <data name="command.request.askSirenaId">
    <value>‚å®Ô∏è *Please enter the Sirena ID* for which you are requesting activation access.
‚ùï Use the ID of an existing *Sirena*
‚ùóÔ∏è You must be subscribed to the *Sirena*
‚ùï You have not yet requested access to this *Sirena*</value>
  </data>
  <data name="command.info.askSirenaId">
    <value>‚å®Ô∏è *Please enter the Sirena ID.*
You must enter the exact *Sirena* ID to display the available actions for it.

If you don&apos;t know the *Sirena* ID, you can {0} it by its name or part of the name.</value>
  </data>
  <data name="command.info.not_exists">
    <value>‚ö†Ô∏è *Sirena with ID* `{0}` *not found.*
Please check the ID and try again.

If you don&apos;t know the *Sirena* ID, you can {1} it by its name or part of the name.</value>
  </data>
  <data name="menu.buttons.delegate.title">
    <value>ü§ù Delegate</value>
  </data>
  <data name="command.decline_request.error.not_owner">
    <value>‚ö†Ô∏è You do not have permission to view delegation requests for *Sirena*: {0}, as you are not the owner.</value>
  </data>
  <data name="command.decline_request.error.no_requests">
    <value>‚ö†Ô∏è There are currently no delegation requests for *Sirena*: {0}.</value>
  </data>
  <data name="command.decline_request.error.no_requestor">
    <value>‚ö†Ô∏è User {1} has not requested activation rights for *Sirena*: {0}.</value>
  </data>
  <data name="command.decline_request.success">
    <value>‚úÖüö´ User {1} delegation request for *Sirena*: {0} has been declined.</value>
  </data>
  <data name="menu.buttons.reaction.128591">
    <value>üôèThank you</value>
  </data>
  <data name="menu.buttons.reaction.128591.unset">
    <value>üòë Take back thanks</value>
  </data>
  <data name="menu.buttons.reaction.128175">
    <value>üí¢ Reproach</value>
  </data>
  <data name="menu.buttons.reaction.128175.unset">
    <value>üòë Back down</value>
  </data>
  <data name="miscellaneous.copy_link">
    <value>üîó Invite link</value>
  </data>
  <data name="miscellaneous.copy_id">
    <value>üÜî Sirena ID</value>
  </data>
  <data name="command.decline_request.description">
    <value>Declines a user&apos;s request for Sirena activation rights.</value>
  </data>
  <data name="command.react.description">
    <value>React to a certain call of the Sirena.</value>
  </data>
</root>